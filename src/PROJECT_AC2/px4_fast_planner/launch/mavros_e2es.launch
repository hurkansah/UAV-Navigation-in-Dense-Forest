<launch>

    <!-- For sim -->
    <arg name="use_gazebo" default="true"/>

    <!-- Planner configs -->
    <arg name="use_kino_planner" default="false" />
    <arg name="map_size_x" default="85.0"/>
    <arg name="map_size_y" default="85.0"/>
    <arg name="map_size_z" default="10.0"/>

    <arg name="odom_topic" default="/mavros/local_position/odom" />
    <arg name="camera_pose_topic" default="/camera/pose"/>
    <arg name="depth_topic" default="/camera/depth_aligned_to_color_and_infra1/image_raw"/>

    <arg name="max_vel" default="1.5" />
    <arg name="max_acc" default="1" />

    <!-- Initial drone's position in Gazebo -->
    <arg name="init_pos_x" default="-40" />
    <arg name="init_pos_y" default="0.0" />
    <arg name="init_pos_z" default="0.0" />
    <!-- takeoff height -->
    <arg name="takeoff_height" default="8" />

    <!-- ROS static transformation -->
    <node pkg="tf" type="static_transform_publisher" name="world_map_linker" args="0 0 0 0 0 0 world map 1" />
    <node pkg="tf" type="static_transform_publisher" name="tf_odom" args="0 0 0 0 0 0 map odom 1"/> 
    <node pkg="tf" type="static_transform_publisher" name="tf_camera" args="0.1 0 0.0 -1.57 0 -1.57 base_link camera_link 1"/>
    <node pkg="tf" type="static_transform_publisher" name="tf_depth" args="0 0 0 0 0 0 camera_link camera_depth_optical_frame 1"/>  

    <!-- MAVROS + PX4 + Gazebo -->
    <include file="$(find e2es)/launch/iris_d435_indoor.launch" >
        <arg name="x" value="$(arg init_pos_x)"/>
        <arg name="y" value="$(arg init_pos_y)"/>
        <arg name="z" value="$(arg init_pos_z)"/>
    </include>

    <!-- Fast planner  -->
    <include unless="$(arg use_kino_planner)" file="$(find px4_fast_planner)/launch/px4_topo_replan.launch" >
        <arg name="map_size_x" default="$(arg map_size_x)"/>
        <arg name="map_size_y" default="$(arg map_size_y)"/>
        <arg name="map_size_z" default="$(arg map_size_z)"/>

        <arg name="odom_topic" default="$(arg odom_topic)" />
        <arg name="depth_topic" default="$(arg depth_topic)"/>
        <arg name="camera_pose_topic" default="$(arg camera_pose_topic)"/>
    </include>

    <include if="$(arg use_kino_planner)" file="$(find px4_fast_planner)/launch/px4_kino_replan.launch" >
        <arg name="map_size_x" default="$(arg map_size_x)"/>
        <arg name="map_size_y" default="$(arg map_size_y)"/>
        <arg name="map_size_z" default="$(arg map_size_z)"/>

        <arg name="odom_topic" default="$(arg odom_topic)" />
        <arg name="depth_topic" default="$(arg depth_topic)"/>
        <arg name="camera_pose_topic" default="$(arg camera_pose_topic)"/>
    </include> 

    <!-- Geometric controller -->
    <include file="$(find geometric_controller)/launch/sitl_trajectory_track_circle.launch">
        <arg name="gazebo_simulation" value="$(arg use_gazebo)" />

    </include>
    
    <!-- Camera pose publisher -->
    <!-- This node publishes tf from parent_frame to child_frame-->
    <node pkg="px4_fast_planner" name="camera_pose_publisher" type="camera_pose_publisher.py" output="screen">
        <param name="parent_frame" value="world" />
        <param name="child_frame" value="camera_link" />
        <param name="pose_topic" value="/camera/pose" />
    </node>
    
    <!-- MOVE BASE GOAL PUBLISHER -->
   <!--  <node pkg="px4_fast_planner" name="movebase_publisher_py" type="waypoint_publisher.py" output="screen">
	<param name="goals_move_frame" value="world"/>
    </node> -->

    <node pkg="px4_fast_planner" name="traj_msg_converter" type="trajectory_msg_converter.py" output="screen">
        <param name="fast_planner_traj_topic" value="planning/ref_traj"/>
        <param name="traj_pub_topic" value="command/trajectory"/>
    </node> 

    <!-- Rviz -->
    <include file="$(find px4_fast_planner)/launch/rviz.launch" />

    <!-- robot_pose-->
    <!-- <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
        <param name="output_frame" value="odom"/>
        <param name="base_footprint_frame" value="base_link"/>
        <param name="freq" value="30.0"/>
        <param name="sensor_timeout" value="1.0"/>
        <param name="odom_used" value="true"/>
        <param name="imu_used" value="true"/>
        <param name="vo_used" value="true"/>
        <param name="debug" value="false"/>
        <param name="self_diagnose" value="false"/>
    </node> -->
    

</launch>
